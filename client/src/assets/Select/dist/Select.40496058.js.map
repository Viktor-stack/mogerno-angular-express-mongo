{"version":3,"sources":["select/select.js","index.js"],"names":["getTemplate","data","placeholder","selectedID","text","items","map","item","cls","id","value","join","Select","selector","options","$el","document","querySelector","event","type","target","dataset","toggle","select","close","$value","textContent","current","querySelectorAll","forEach","el","classList","remove","add","onSelect","isOpen","open","$arrow","removeEventListener","clickHandler","innerHTML","contains","find","bind","addEventListener","console","log","window","s"],"mappings":"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","file":"Select.40496058.js","sourceRoot":"..","sourcesContent":["const getTemplate = (data = [], placeholder, selectedID) => {\r\n    let text = placeholder ?? 'Default Placeholder'\r\n    const items = data.map(item => {\r\n        let cls = ''\r\n        if (item.id === selectedID) {\r\n            text = item.value\r\n            cls = 'selected'\r\n        }\r\n        return `\r\n        <li class=\"select__item ${cls}\" data-type=\"item\" data-id=\"${item.id}\">${item.value}</li>\r\n        `\r\n    })\r\n    return `\r\n        <div class=\"select__backdrop\" data-type=\"backdrop\"></div>\r\n        <div class=\"select__input\" data-type=\"input\">\r\n              <span data-type=\"value\">${text}</span> \r\n                <i class=\"fa fa-chevron-down\" data-type=\"arrow\"></i>\r\n            </div>\r\n            <div class=\"select__dropdown\">\r\n                <ul class=\"select__list\">\r\n                    ${items.join('')}\r\n                </ul>\r\n            </div>\r\n    `\r\n}\r\n\r\n\r\nexport class Select {\r\n    constructor(selector, options) {\r\n        this.$el = document.querySelector(selector)\r\n        this.options = options\r\n        this.selectedID = options.selectedID\r\n\r\n        this.#render()\r\n        this.#setup()\r\n    }\r\n\r\n    #render() {\r\n        const {placeholder, data} = this.options\r\n        this.$el.classList.add('select')\r\n        this.$el.innerHTML = getTemplate(data, placeholder, this.selectedID)\r\n    }\r\n\r\n\r\n    #setup() {\r\n        this.clickHandler = this.clickHandler.bind(this)\r\n        this.$el.addEventListener('click', this.clickHandler)\r\n        this.$arrow = this.$el.querySelector('[data-type=\"arrow\"]')\r\n        this.$value = this.$el.querySelector('[data-type=\"value\"]')\r\n    }\r\n\r\n    clickHandler(event) {\r\n        const {type} = event.target.dataset\r\n        if (type === 'input') {\r\n            this.toggle()\r\n        } else if (type === 'item') {\r\n            const id = event.target.dataset.id\r\n            this.select(id)\r\n        } else if (type === 'backdrop') {\r\n            this.close()\r\n        }\r\n    }\r\n\r\n    get isOpen() {\r\n        return this.$el.classList.contains('open')\r\n    }\r\n\r\n    get current() {\r\n        return this.options.data.find(item => item.id === this.selectedID)\r\n    }\r\n\r\n    select(id) {\r\n        this.selectedID = id\r\n        this.$value.textContent = this.current.value\r\n        this.$el.querySelectorAll('[data-type=\"item\"]').forEach(el => {\r\n            el.classList.remove('selected')\r\n        })\r\n        this.$el.querySelector(`[data-id=\"${id}\"]`).classList.add('selected')\r\n\r\n        this.options.onSelect ? this.options.onSelect(this.current) : null\r\n\r\n\r\n        this.close()\r\n    }\r\n\r\n    toggle() {\r\n        this.isOpen ? this.close() : this.open()\r\n    }\r\n\r\n    open() {\r\n        this.$el.classList.add('open')\r\n        this.$arrow.classList.remove('fa-chevron-down')\r\n        this.$arrow.classList.add('fa-chevron-up')\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$el.classList.remove('open')\r\n        this.$arrow.classList.remove('fa-chevron-up')\r\n        this.$arrow.classList.add('fa-chevron-down')\r\n    }\r\n\r\n    destroy() {\r\n        this.$el.removeEventListener('click', this.clickHandler)\r\n        this.$el.innerHTML = ''\r\n    }\r\n}\r\n","import {Select} from './select/select'\r\nimport './scss/style.scss'\r\n\r\nconst select = new Select('#select', {\r\n    placeholder: 'Выберите пожалуйста пункт',\r\n    selectedID: '4',\r\n    data: [\r\n        {id: '1', value: 'React'},\r\n        {id: '2', value: 'Angular'},\r\n        {id: '3', value: 'VueJS'},\r\n        {id: '4', value: 'React Native'},\r\n        {id: '5', value: 'Next'},\r\n        {id: '6', value: 'Next'},\r\n    ],\r\n    onSelect(item) {\r\n        console.log('Selected Item', item)\r\n    }\r\n})\r\n\r\n\r\nwindow.s = select\r\n"]}